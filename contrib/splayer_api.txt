SVPlayer视频文件hash算法 （草）
Version. 0.1    Date: 2008-11-04


方案
取文件第4k位置，再根据floor( 文件总长度/3 )计算，取中间2处，再取文件结尾倒数第8k的位置， 4个位置各取4k区块做md5。共得到4个md5值，均设为索引。可以进行智能匹配。 （可以应用于不完全下载的p2p文件）

Sample
56    CString CSVPhash::ComputerFileHash(CString szFilePath)
57    {
58          int stream;
59          errno_t err;
60          _int64 offset[4];
61          DWORD timecost = GetTickCount();
62          CString szRet = _T("");
63          err = _wsopen_s(&stream, szFilePath, _O_BINARY|_O_RDONLY , _SH_DENYNO , _S_IREAD );
64          if(!err){
65                  __int64 ftotallen  = _filelengthi64( stream );
66                  if (ftotallen < 8192){
67                          //a video file less then 8k? impossible!
68                         
69                  }else{
70                          offset[3] = ftotallen - 8192;
71                              offset[2] = ftotallen / 3;
72                          offset[1] = ftotallen / 3 * 2;
73                          offset[0] = 4096;
74                          CMD5Checksum mMd5;
75                          BYTE bBuf[4096];
76                          for(int i = 0; i < 4;i++){
77                                  _lseeki64(stream, offset[i], 0);
78                                  //hash 4k block
79                                  int readlen = _read( stream, bBuf, 4096);
80                                  CString szMD5 = mMd5.GetMD5( bBuf , readlen); 
81                                  if(!szRet.IsEmpty()){
82                                          szRet.Append( _T(";") );
83                                  }
8                                szRet.Append(szMD5);
85                          }
86                  }
87                  _close(stream);
88          }
89          timecost =  GetTickCount() - timecost;
90          return szRet;
93    }

参数格式

各段hash之间以 “;”分隔。



范例文件

范例文件可以在这里下载：  https://docs.google.com/file/d/0B2yI4786fKzdQjNvLWJPUjg3UU0/edit?usp=sharing

该范例文件（testidx.avi）的正确hash是：
84f0e9e5e05f04b58f53e2617cc9c866;b1f0696aec64577228d93eabcc8eb69b;f54d6eb31bef84839c3ce4fc2f57991c;f497c6684c4c6e50d0856b5328a4bedc


射手影音智能字幕查询API（JSON）
2013-10-15

功能
根据客户端提交的信息，返回匹配字幕信息和字幕数据包
通讯协议
HTTP POST
接口地址
https://www.shooter.cn/api/subapi.php
接口流程
客户端向服务器接口提交视频文件信息，服务器返回字幕数据信息
上行参数
参数名称
类型
含义
备注
示例
filehash
String
视频文件的hash码 
必填
参考“文件Hash算法协议”
pathinfo
String
视频文件的所在路径名和文件名
必填
D:/Matrix.720p.HDTV.X264-DIMENSION/md.mkv
format
String
结果输出格式，值必须为 json
必填
json
lang
String
字幕语言
可选
eng或者chn
注：参数均以标准的RFC 3986协议编码传送。即以文字的UTF8值进行URLEncode编码传送。例如“中国”，将以“%E4%B8%AD%E5%9B%BD”传送。
下行数据

尚不能提供字幕时将返回一个字节，值为0xff(-1)。
可提供字幕时会返回json格式的Subinfo结构的Array数据，结构如下：


type Fileinfo struct {
  Ext    string // 文件扩展名
  Link   string // 文件下载链接
}
type Subinfo struct {
  Desc   string // 备注信息
  Delay  int32  // 字幕相对于视频的延迟时间，单位是毫秒
  Files  []Fileinfo  // 包含文件信息的Array。 注：一个字幕可能会包含多个字幕文件，例如：idx+sub格式
}
